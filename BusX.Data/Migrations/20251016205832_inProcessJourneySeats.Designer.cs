// <auto-generated />
using System;
using BusX.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusX.Data.Migrations
{
    [DbContext(typeof(BusXDbContext))]
    [Migration("20251016205832_inProcessJourneySeats")]
    partial class inProcessJourneySeats
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("BusX.Data.Models.InProcessJourneySeat", b =>
                {
                    b.Property<int>("InProcessJourneySeatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("in_process_journey_seat_id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("create_date");

                    b.Property<int?>("CreateUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_user_id");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("delete_date");

                    b.Property<int?>("DeleteUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("delete_user_id");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<int>("JourneyID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("journey_id");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_user_id");

                    b.Property<int>("SeatNo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("seat_no");

                    b.HasKey("InProcessJourneySeatID")
                        .HasName("pk_in_process_journey_seats");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("i_x_in_process_journey_seats_is_deleted");

                    b.ToTable("in_process_journey_seats");
                });

            modelBuilder.Entity("BusX.Data.Models.Journey", b =>
                {
                    b.Property<int>("JourneyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("journey_id");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("base_price");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("create_date");

                    b.Property<int?>("CreateUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_user_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("delete_date");

                    b.Property<int?>("DeleteUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("delete_user_id");

                    b.Property<TimeSpan>("Departure")
                        .HasColumnType("TEXT")
                        .HasColumnName("departure");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("from");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<bool>("IsAir")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_air");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsService")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_service");

                    b.Property<bool>("IsTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_tv");

                    b.Property<bool>("IsWifi")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_wifi");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_user_id");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("provider");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("to");

                    b.Property<int>("TotalSeat")
                        .HasColumnType("INTEGER")
                        .HasColumnName("total_seat");

                    b.HasKey("JourneyID")
                        .HasName("pk_journeys");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("i_x_journeys_is_deleted");

                    b.ToTable("journeys");
                });

            modelBuilder.Entity("BusX.Data.Models.Station", b =>
                {
                    b.Property<int>("StationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("station_id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("create_date");

                    b.Property<int?>("CreateUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_user_id");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("delete_date");

                    b.Property<int?>("DeleteUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("delete_user_id");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_user_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("StationID")
                        .HasName("pk_stations");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("i_x_stations_is_deleted");

                    b.ToTable("stations");
                });

            modelBuilder.Entity("BusX.Data.Models.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ticket_id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("create_date");

                    b.Property<int?>("CreateUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_user_id");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("delete_date");

                    b.Property<int?>("DeleteUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("delete_user_id");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsMale")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_male");

                    b.Property<int>("JourneyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("journey_id");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("modify_date");

                    b.Property<int?>("ModifyUserID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modify_user_id");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("passenger_name");

                    b.Property<string>("PassengerSurname")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("passenger_surname");

                    b.Property<string>("Pnr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("pnr");

                    b.Property<int>("SeatNo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("seat_no");

                    b.Property<decimal>("TcNo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("tc_no");

                    b.HasKey("TicketID")
                        .HasName("pk_tickets");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("i_x_tickets_is_deleted");

                    b.HasIndex("JourneyId")
                        .HasDatabaseName("i_x_tickets_journey_id");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("BusX.Data.Models.Ticket", b =>
                {
                    b.HasOne("BusX.Data.Models.Journey", "Journey")
                        .WithMany("Tickets")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("BusX.Data.Models.Journey", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
